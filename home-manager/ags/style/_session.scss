@use "sass:color";
@use "palette";
@use "abstracts/looks";

@mixin grid-box($v, $h) {
  $v-opposed: "bottom";
  @if $v == "bottom" {
    $v-opposed: "top";
  }

  $h-opposed: "right";
  @if $h == "right" {
    $h-opposed: "left";
  }

  border-#{$v}-#{$h}-radius: looks.$radius;
  margin-#{$v}: 0.75em;
  margin-#{$h}: 0.75em;

  &:focus,
  &:hover {
    border-#{$v-opposed}-#{$h-opposed}-radius: 2px;
  }
}

#session {
  color: palette.$primary-bright;

  image {
    margin: 5rem 7.5rem;
    -gtk-icon-size: 4.25rem;
    transition:
      -gtk-icon-size 0.25s cubic-bezier(0.55, 0, 0.25, 1.68),
      color 0s linear;
  }

  .box {
    border-radius: 2px;
    filter: drop-shadow(palette.$shadow, 2px, 2px, 16px);

    &:focus {
      @include looks.radius;
      color: palette.$primary;
      background-color: color.change(palette.$base, $alpha: 0.7);

      image {
        -gtk-icon-size: 4.75rem;
      }
    }

    &:hover {
      @include looks.radius;

      margin: 4px;
      color: palette.$base;
      background-color: palette.$primary;

      image {
        -gtk-icon-size: 5rem;
      }
    }
  }

  #lock {
    @include grid-box("top", "left");
  }
  #logout {
    @include grid-box("bottom", "left");
  }
  #reboot {
    @include grid-box("top", "right");
  }
  #shutdown {
    @include grid-box("bottom", "right");
  }
}
